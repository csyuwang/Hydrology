var Viewport = function (editor) {    var signals = editor.signals;    // UI    var container = new EditorUI.Panel();    var canvasStyle = Config.Canvas.Style;    var canvas = new EditorUI.Canvas(canvasStyle.width,canvasStyle.height);    canvas.setBackgroundColor(canvasStyle.backgroundColor);    canvas.setPosition(canvasStyle.top,canvasStyle.left);    container.add(canvas);    // handle signals    signals.windowResize.add( function () {        canvas.setSize(window.innerHeight - 64,window.innerHeight - 64);    } );    signals.layerChanged.add(function (projectId,propertyType,layer) {        alert(projectId+','+propertyType+','+layer);        $.ajax({            type: 'GET',            contentType: 'application/json',            url: '../getdata/getXYGrids.json',            data: { 'projectId': projectId,'propertyType': propertyType, 'layer':layer},            dataType: 'json',            success: function () {            }        });    });    // 画网格    function drawGrid(canvas,grid) {        var ctx = canvas.getContext();        var width = canvas.getOffsetWidth();        var height = canvas.getOffsetHeight();        var gridHelper = editor.gridHelper;        var gridX_MAX = grid.x_max;        var gridY_MAX = grid.y_max;        ctx.beginPath();        ctx.strokeStyle = "black";        ctx.lineWidth = 1;        $.each(grid.xList, function (index,gridX) {            var x = gridHelper.gridX2canvasX(gridX,gridX_MAX,width);            ctx.moveTo(x , 0);            ctx.lineTo(x , height);        });        $.each(grid.yList, function (index,gridY) {            var y = gridHelper.gridY2canvasY(gridY,gridY_MAX,height);            ctx.moveTo(0, y);            ctx.lineTo(width, y);        });        ctx.stroke();        ctx.closePath();    }    signals.projectChanged.add(function (projectId) {        $.ajax({            type: 'GET',            contentType: 'application/json',            url: '../getdata/getXYGrids.json',            data: { 'projectId': projectId },            dataType: 'json',            success: function (grid) {                drawGrid(canvas,grid);            }        });    } );    return container;};