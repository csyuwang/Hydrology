var Viewport = function (editor) {    var signals = editor.signals;    var gridHelper = editor.gridHelper;    var status = editor.systemStatus;    // UI    var container = new EditorUI.Panel();    var canvasStyle = Config.Canvas.Style;    var canvas = new EditorUI.Canvas(canvasStyle.width,canvasStyle.height);    canvas.setBackgroundColor(canvasStyle.backgroundColor);    canvas.setPosition(canvasStyle.top,canvasStyle.left);    canvas.onMouseMove(onMouseMove);    container.add(canvas);    //    function onMouseMove(e) {        console.log(e.offsetX);        console.log(e.offsetY);        var normalX = gridHelper.getNormalXCoordinate(gridHelper.canvas2GridScaleX(e.offsetX));    }    // handle signals    // 窗口改变重新设置画布大小    signals.windowResize.add( function () {        canvas.setSize(window.innerHeight - 64,window.innerHeight - 64);        gridHelper.canvasWidth = canvas.getOffsetWidth() - 1;        gridHelper.canvasHeight = canvas.getOffsetHeight() - 1;        //gridHelper.drawXYGrid(canvas);    } );    // 项目初始化完成时    signals.projectInitialized.add(function (projectId) {        $.ajax({            type: 'GET',            contentType: 'application/json',            url: '../getdata/getXYGrids.json',            data: { 'projectId': projectId },            dataType: 'json',            success: function (grid) {                gridHelper.xCoordinates = grid.xCoordinates;                gridHelper.yCoordinates = grid.yCoordinates;                //默认初始化XY方向网格                gridHelper.drawXYGrid(canvas);            }        });    });    // 层改变时画出XY方向所有Block    signals.layerChanged.add(function (projectId,propertyType,layer) {        //alert(projectId+','+propertyType+','+layer);        gridHelper.drawXYGrid(canvas);        $.ajax({            type: 'GET',            contentType: 'application/json',            url: '../getdata/getBlocks.json',            data: { 'projectId': projectId,'propertyType': propertyType, 'layer':layer},            dataType: 'json',            success: function (blocks) {                gridHelper.drawBlocks(canvas,blocks);            }        });    });    // 行改变时画出XZ方向所有Block    signals.rowChanged.add(function (row) {        // for test        $.ajax({            type: 'GET',            contentType: 'application/json',            url: '../getdata/getXZGrids.json',            data: { 'projectId': status.projectId, 'row':row},            dataType: 'json',            success: function (grids) {                gridHelper.drawXZGrid(canvas,grids);            }        });    });    // 列改变时画出YZ方向所有Block    signals.columnChanged.add(function (column) {        // for test        $.ajax({            type: 'GET',            contentType: 'application/json',            url: '../getdata/getYZGrids.json',            data: { 'projectId': status.projectId, 'column':column},            dataType: 'json',            success: function (grids) {                gridHelper.drawYZGrid(canvas,grids);            }        });    });//    signals.viewLayer.add(function () {////    });////    signals.viewRow.add(function () {////    });////    signals.viewColumn.add(function () {////    });    return container;};